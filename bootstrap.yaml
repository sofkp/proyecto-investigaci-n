Description: This stack includes resources needed to deploy AWS CDK apps into this environment
Parameters:
  TrustedAccounts:
    Description: List of AWS accounts that are trusted to publish assets and deploy stacks to this environment
    Default: ''
    Type: CommaDelimitedList
  TrustedAccountsForLookup:
    Description: List of AWS accounts that are trusted to look up values in this environment
    Default: ''
    Type: CommaDelimitedList
  FileAssetsBucketName:
    Description: The name of the S3 bucket used for file assets
    Default: ''
    Type: String
  FileAssetsBucketKmsKeyId:
    Description: Empty to create a new key (default), 'AWS_MANAGED_KEY' to use a managed S3 key, or the ID/ARN of an existing key.
    Default: ''
    Type: String
  ContainerAssetsRepositoryName:
    Description: A user-provided custom name to use for the container assets ECR repository
    Default: ''
    Type: String
  Qualifier:
    Description: An identifier to distinguish multiple bootstrap stacks in the same environment
    Default: hnb659fds
    Type: String
    AllowedPattern: '[A-Za-z0-9_-]{1,10}'
    ConstraintDescription: Qualifier must be an alphanumeric identifier of at most 10 characters
  PublicAccessBlockConfiguration:
    Description: Whether or not to enable S3 Staging Bucket Public Access Block Configuration
    Default: 'true'
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
  InputPermissionsBoundary:
    Description: Whether or not to use either the CDK supplied or custom permissions boundary
    Default: ''
    Type: String
  UseExamplePermissionsBoundary:
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Type: String
  BootstrapVariant:
    Type: String
    Default: 'AWS CDK: Default Resources'
    Description: Describe the provenance of the resources in this bootstrap stack. Change this when you customize the template. To prevent accidents, the CDK CLI will not overwrite bootstrap stacks with a different variant.
Conditions:
  HasTrustedAccounts: !Not
    - !Equals
      - ''
      - !Join
        - ','
        - !Ref TrustedAccounts
  HasTrustedAccountsForLookup: !Not
    - !Equals
      - ''
      - !Join
        - ','
        - !Ref TrustedAccountsForLookup
  HasCustomFileAssetsBucketName: !Not
    - !Equals
      - ''
      - !Ref FileAssetsBucketName
  CreateNewKey: !Equals
    - ''
    - !Ref FileAssetsBucketKmsKeyId
  UseAwsManagedKey: !Equals
    - AWS_MANAGED_KEY
    - !Ref FileAssetsBucketKmsKeyId
  ShouldCreatePermissionsBoundary: !Equals
    - 'true'
    - !Ref UseExamplePermissionsBoundary
  PermissionsBoundarySet: !Not
    - !Equals
      - ''
      - !Ref InputPermissionsBoundary
  HasCustomContainerAssetsRepositoryName: !Not
    - !Equals
      - ''
      - !Ref ContainerAssetsRepositoryName
  UsePublicAccessBlockConfiguration: !Equals
    - 'true'
    - !Ref PublicAccessBlockConfiguration
Resources:
  FileAssetsBucketEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey
              - kms:TagResource
              - kms:UntagResource
            Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Resource: '*'
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS: '*'
            Resource: '*'
            Condition:
              StringEquals:
                kms:CallerAccount: !Ref AWS::AccountId
                kms:ViaService:
                  - !Sub s3.${AWS::Region}.amazonaws.com
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource: '*'
    Condition: CreateNewKey
  FileAssetsBucketEncryptionKeyAlias:
    Condition: CreateNewKey
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/cdk-${Qualifier}-assets-key
      TargetKeyId: !Ref FileAssetsBucketEncryptionKey
  StagingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If
        - HasCustomFileAssetsBucketName
        - !Sub ${FileAssetsBucketName}
        - !Sub cdk-${Qualifier}-assets-${AWS::AccountId}-${AWS::Region}
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !If
                - CreateNewKey
                - !Sub ${FileAssetsBucketEncryptionKey.Arn}
                - !If
                  - UseAwsManagedKey
                  - !Ref AWS::NoValue
                  - !Sub ${FileAssetsBucketKmsKeyId}
      PublicAccessBlockConfiguration: !If
        - UsePublicAccessBlockConfiguration
        - BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        - !Ref AWS::NoValue
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: CleanupOldVersions
            Status: Enabled
            NoncurrentVersionExpiration:
              NoncurrentDays: 365
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  StagingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StagingBucket
      PolicyDocument:
        Id: AccessControl
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action: s3:*
            Effect: Deny
            Resource:
              - !Sub ${StagingBucket.Arn}
              - !Sub ${StagingBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
            Principal: '*'
  ContainerAssetsRepository:
    Type: AWS::ECR::Repository
    Properties:
      ImageTagMutability: IMMUTABLE
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Untagged images should not exist, but expire any older than one year",
                "selection": {
                  "tagStatus": "untagged",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 365
                },
                "action": { "type": "expire" }
              }
            ]
          }
      RepositoryName: !If
        - HasCustomContainerAssetsRepositoryName
        - !Sub ${ContainerAssetsRepositoryName}
        - !Sub cdk-${Qualifier}-container-assets-${AWS::AccountId}-${AWS::Region}
      RepositoryPolicyText:
        Version: '2012-10-17'
        Statement:
          - Sid: LambdaECRImageRetrievalPolicy
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Condition:
              StringLike:
                aws:sourceArn: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:*
  CdkBootstrapVersion:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /cdk-bootstrap/${Qualifier}/version
      Value: '21'
Outputs:
  BucketName:
    Description: The name of the S3 bucket owned by the CDK toolkit stack
    Value: !Sub ${StagingBucket}
  BucketDomainName:
    Description: The domain name of the S3 bucket owned by the CDK toolkit stack
    Value: !Sub ${StagingBucket.RegionalDomainName}
  FileAssetKeyArn:
    Description: The ARN of the KMS key used to encrypt the asset bucket (deprecated)
    Value: !If
      - CreateNewKey
      - !Sub ${FileAssetsBucketEncryptionKey.Arn}
      - !Sub ${FileAssetsBucketKmsKeyId}
    Export:
      Name: !Sub CdkBootstrap-${Qualifier}-FileAssetKeyArn
  ImageRepositoryName:
    Description: The name of the ECR repository which hosts docker image assets
    Value: !Sub ${ContainerAssetsRepository}
  PublicAccessBlockConfiguration:
    Description: Whether the staging bucket's Public Access Block Configuration is set
    Value: !If
      - UsePublicAccessBlockConfiguration
      - 'true'
      - 'false'
  BootstrapVersion:
    Description: The version of the bootstrap resources that are currently mastered in this stack
    Value: !GetAtt CdkBootstrapVersion.Value
